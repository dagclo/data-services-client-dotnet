/* 
 * Data Quality Assessment
 *
 * Allows users to assess the Quadient Data Services before buying. This service runs assessment jobs based on real data, but does not give back the records that have been corrected. Rather, it provides \"assessment metrics\" which can be used to determine and explain the value of using Data Services. 
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Quadient.DataServices.Model.Client.SwaggerDateConverter;

namespace Quadient.DataServices.Model.Assessment
{
	/// <summary>
	/// If job_status is SUCCESS, this object will contain service_id&#39;s as keys, objects with breakdowns of status codes per output field as values. The assessment metrics vary depending on the selected &#x60;services&#x60;. In addition the &#x60;record-info&#x60; property is always returned. The model here represents the complete set of possible services. 
	/// </summary>
	[DataContract]
	public partial class JobInformationResponseAssessmentMetrics : IEquatable<JobInformationResponseAssessmentMetrics>, IValidatableObject
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="JobInformationResponseAssessmentMetrics" /> class.
		/// </summary>
		/// <param name="RecordInfo">RecordInfo.</param>
		/// <param name="AddressCorrection">AddressCorrection.</param>
		/// <param name="EmailValidation">EmailValidation.</param>
		/// <param name="PhoneValidation">PhoneValidation.</param>
		/// <param name="UsAppends">UsAppends.</param>
		/// <param name="UkAppends">UkAppends.</param>
		public JobInformationResponseAssessmentMetrics(JobInformationResponseAssessmentMetricsRecordinfo RecordInfo = default(JobInformationResponseAssessmentMetricsRecordinfo), JobInformationResponseAssessmentMetricsAddresscorrection AddressCorrection = default(JobInformationResponseAssessmentMetricsAddresscorrection), JobInformationResponseAssessmentMetricsEmailvalidation EmailValidation = default(JobInformationResponseAssessmentMetricsEmailvalidation), JobInformationResponseAssessmentMetricsEmailvalidation PhoneValidation = default(JobInformationResponseAssessmentMetricsEmailvalidation), AppendsMetrics UsAppends = default(AppendsMetrics), AppendsMetrics UkAppends = default(AppendsMetrics))
		{
			this.RecordInfo = RecordInfo;
			this.AddressCorrection = AddressCorrection;
			this.EmailValidation = EmailValidation;
			this.PhoneValidation = PhoneValidation;
			this.UsAppends = UsAppends;
			this.UkAppends = UkAppends;
		}
		
		/// <summary>
		/// Gets or Sets RecordInfo
		/// </summary>
		[DataMember(Name="record-info", EmitDefaultValue=false)]
		public JobInformationResponseAssessmentMetricsRecordinfo RecordInfo { get; set; }

		/// <summary>
		/// Gets or Sets AddressCorrection
		/// </summary>
		[DataMember(Name="address-correction", EmitDefaultValue=false)]
		public JobInformationResponseAssessmentMetricsAddresscorrection AddressCorrection { get; set; }

		/// <summary>
		/// Gets or Sets EmailValidation
		/// </summary>
		[DataMember(Name="email-validation", EmitDefaultValue=false)]
		public JobInformationResponseAssessmentMetricsEmailvalidation EmailValidation { get; set; }

		/// <summary>
		/// Gets or Sets PhoneValidation
		/// </summary>
		[DataMember(Name="phone-validation", EmitDefaultValue=false)]
		public JobInformationResponseAssessmentMetricsEmailvalidation PhoneValidation { get; set; }

		/// <summary>
		/// Gets or Sets UsAppends
		/// </summary>
		[DataMember(Name="us-appends", EmitDefaultValue=false)]
		public AppendsMetrics UsAppends { get; set; }

		/// <summary>
		/// Gets or Sets UkAppends
		/// </summary>
		[DataMember(Name="uk-appends", EmitDefaultValue=false)]
		public AppendsMetrics UkAppends { get; set; }

		/// <summary>
		/// Returns the string presentation of the object
		/// </summary>
		/// <returns>String presentation of the object</returns>
		public override string ToString()
		{
			var sb = new StringBuilder();
			sb.Append("class JobInformationResponseAssessmentMetrics {\n");
			sb.Append("  RecordInfo: ").Append(RecordInfo).Append("\n");
			sb.Append("  AddressCorrection: ").Append(AddressCorrection).Append("\n");
			sb.Append("  EmailValidation: ").Append(EmailValidation).Append("\n");
			sb.Append("  PhoneValidation: ").Append(PhoneValidation).Append("\n");
			sb.Append("  UsAppends: ").Append(UsAppends).Append("\n");
			sb.Append("  UkAppends: ").Append(UkAppends).Append("\n");
			sb.Append("}\n");
			return sb.ToString();
		}
  
		/// <summary>
		/// Returns the JSON string presentation of the object
		/// </summary>
		/// <returns>JSON string presentation of the object</returns>
		public string ToJson()
		{
			return JsonConvert.SerializeObject(this, Formatting.Indented);
		}

		/// <summary>
		/// Returns true if objects are equal
		/// </summary>
		/// <param name="input">Object to be compared</param>
		/// <returns>Boolean</returns>
		public override bool Equals(object input)
		{
			return this.Equals(input as JobInformationResponseAssessmentMetrics);
		}

		/// <summary>
		/// Returns true if JobInformationResponseAssessmentMetrics instances are equal
		/// </summary>
		/// <param name="input">Instance of JobInformationResponseAssessmentMetrics to be compared</param>
		/// <returns>Boolean</returns>
		public bool Equals(JobInformationResponseAssessmentMetrics input)
		{
			if (input == null)
				return false;

			return 
				(
					this.RecordInfo == input.RecordInfo ||
					(this.RecordInfo != null &&
					this.RecordInfo.Equals(input.RecordInfo))
				) && 
				(
					this.AddressCorrection == input.AddressCorrection ||
					(this.AddressCorrection != null &&
					this.AddressCorrection.Equals(input.AddressCorrection))
				) && 
				(
					this.EmailValidation == input.EmailValidation ||
					(this.EmailValidation != null &&
					this.EmailValidation.Equals(input.EmailValidation))
				) && 
				(
					this.PhoneValidation == input.PhoneValidation ||
					(this.PhoneValidation != null &&
					this.PhoneValidation.Equals(input.PhoneValidation))
				) && 
				(
					this.UsAppends == input.UsAppends ||
					(this.UsAppends != null &&
					this.UsAppends.Equals(input.UsAppends))
				) && 
				(
					this.UkAppends == input.UkAppends ||
					(this.UkAppends != null &&
					this.UkAppends.Equals(input.UkAppends))
				);
		}

		/// <summary>
		/// Gets the hash code
		/// </summary>
		/// <returns>Hash code</returns>
		public override int GetHashCode()
		{
			unchecked // Overflow is fine, just wrap
			{
				int hashCode = 41;
				if (this.RecordInfo != null)
					hashCode = hashCode * 59 + this.RecordInfo.GetHashCode();
				if (this.AddressCorrection != null)
					hashCode = hashCode * 59 + this.AddressCorrection.GetHashCode();
				if (this.EmailValidation != null)
					hashCode = hashCode * 59 + this.EmailValidation.GetHashCode();
				if (this.PhoneValidation != null)
					hashCode = hashCode * 59 + this.PhoneValidation.GetHashCode();
				if (this.UsAppends != null)
					hashCode = hashCode * 59 + this.UsAppends.GetHashCode();
				if (this.UkAppends != null)
					hashCode = hashCode * 59 + this.UkAppends.GetHashCode();
				return hashCode;
			}
		}

		/// <summary>
		/// To validate all properties of the instance
		/// </summary>
		/// <param name="validationContext">Validation context</param>
		/// <returns>Validation Result</returns>
		IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
		{
			yield break;
		}
	}

}
