/* 
 * US Move Update
 *
 * This service offers the ability to update addresses of organizations and persons who have moved in the United States.  ## Job execution  The general flow to execute a batch job is to:  1. Create a job, specifying configuration properties, upload and download schema (input fields and output fields). Job configuration cannot be changed after creation.  2. Upload records to process via one or more calls to the `/jobs/{job_id}/records` endpoint. Records are uploaded in blocks. The records are stored on the server for processing.  3. Initiate processing by calling the `/jobs/{job_id}/_run` endpoint. 4. Wait for the job status to enter `SUCCESS` or `FAILED`. 5. Download the records. 6. Delete job when you are done with it via a `DELETE` on the `/jobs/{job_id}` endpoint, removing input and output records.  ## Records  Records must be uploaded completely prior to running the service. Records are categorized as `input` or `output`. The schema (fields and order) of the records are defined via the job creation call.  ## Paginationchange Records for a job are broken into pages (`page_id`) for retrieval. The collection of record page ids are available via the `/jobs/{job_id}/records/pages` endpoint. Retrieve this collection as a precursor to downloading records. Each record page can then be retrieved by the client. Page IDs are immutable and can be retrieved in parallel. Record pages may also be retrieved multiple times if needed. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Quadient.DataServices.Model.Client.SwaggerDateConverter;

namespace Quadient.DataServies.Model.UsBatch
{
    /// <summary>
    /// Defines MoveUpdateOutputField
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum MoveUpdateOutputField
    {
        
        id = 1,
        
        address_type = 2,
        
        move_date = 3,
        
        business = 4,
        
        address_line_1 = 5,
        
        address_line_2 = 6,
        
        city_state_zip = 7,
        
        primary_address_line = 8,
        
        secondary_address_line = 9,
        
        full_name = 10,
        
        first_name = 11,
        
        middle_name = 12,
        
        last_name = 13,
        
        urbanization = 14,
        
        primary_number = 15,
        
        pre_directional = 16,
        
        street_name = 17,
        
        street_suffix = 18,
        
        post_directional = 19,
        
        unit_designator = 20,
        
        unit_number = 21,
        
        city = 22,
        
        state = 23,
        
        zip_code = 24,
        
        outcome_codes = 25,
        
        custom_1 = 26,
        
        custom_2 = 27,
        
        custom_3 = 28,
        
        custom_4 = 29,
        
        custom_5 = 30,
        
        custom_6 = 31,
        
        custom_7 = 32,
        
        custom_8 = 33,
        
        custom_9 = 34,
        
        custom_10 = 35
    }
    
}
