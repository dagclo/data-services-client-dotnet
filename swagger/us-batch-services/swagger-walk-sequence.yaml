swagger: '2.0'
info:
  version: 0.1.0
  title: "Walk Sequence"
  description: |
    Performs USPS CASS processing and appends USPS Walk Sequence numbers to mail pieces. Properly walk sequenced mailings may qualify for USPS mailing discounts.

    ## Job execution

    The general flow to execute a batch job is to:

    1. Create a job, specifying configuration properties, upload and download schema (input fields and output fields). Job configuration cannot be changed after creation. 
    2. Upload records to process via one or more calls to the `/jobs/{job_id}/records` endpoint. Records are uploaded in blocks. The records are stored on the server for processing. 
    3. Initiate processing by calling the `/jobs/{job_id}/_run` endpoint.
    4. Wait for the job status to enter `SUCCESS` or `FAILED`.
    5. Download the records.
    6. Delete job when you are done with it via a `DELETE` on the `/jobs/{job_id}` endpoint, removing input and output records.

    ## Records

    Records must be uploaded completely prior to running the service. Records are categorized as `input` or `output`. The schema (fields and order) of the records are defined via the job creation call.
    
    ## Pagination
    Records for a job are broken into pages (`page_id`) for retrieval. The collection of record page ids are available via the `/jobs/{job_id}/records/pages` endpoint. Retrieve this collection as a precursor to downloading records. Each record page can then be retrieved by the client. Page IDs are immutable and can be retrieved in parallel. Record pages may also be retrieved multiple times if needed.
  
basePath: /services/walk-sequence/v1
paths:
  /jobs:
    post:
      summary: Create a new job.
      description: |
        Creates and configures a new Walk Sequence job. The input and output fields defines the schema and the order of the fields within records transmitted to and from the service. Job configuration cannot be changed after creation. After job creation, upload the records to be prococessed and then `_run` the job.
      parameters:
      - name: job
        in: body
        required: !!bool true
        schema:
          $ref: '#/definitions/WalkSequenceJobCreationRequest'
      responses:
        '201':
          description: Successful response
          schema:
            $ref: '#/definitions/JobSummary'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Retrieve summaries for of all of your jobs.
      description: Get summary of existing jobs. You can filter this list to a specific user, provided you have access to more than just your account.
      parameters:
      - name: user_id
        in: query
        required: !!bool false
        type: string
        description: Filter the result to a specific `user_id`.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/JobSummaryCollection'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove all jobs.
      description: Removes all of your Walk Sequence jobs.  You can filter this list to a specific user, provided you have access to more than just your account.
      parameters:
      - name: user_id
        in: query
        required: !!bool false
        type: string
        description: Scopes the removal to a specific `user_id` only.
      responses:
        '200':
          description: Successful response
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}:
    parameters:
    - name: job_id
      in: path
      required: !!bool true
      type: string
      description: The `job_id` of interest.
    get:
      summary: Retrieve a specific job's details.
      description: |
        Retrieves the details of the job. The details will include all of the configuration information used to create the job. The job's current status will also be included. Use the `/status` endpoint if you are polling to see when a job is complete.
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WalkSequenceJob'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Remove a specific job.
      description: |
        Removes the data associated with the job and marks it as `DELETED`. All records (input and output) are removed. Reports are removed. The job will not appear in the collection of job summaries available from the `/jobs` endpoint. 
      responses:
        '200':
          description: Successful response
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/status:
    parameters:
    - name: job_id
      in: path
      required: true
      type: string
      description: The `job_id` of interest.
    get:
      summary: Retrieve a job's current status.
      description: |
        Get a job's status. Use this endpoint to determine when the job is finished. Records and reports may be retrieved when the status is `SUCCESS`. Additional notes may be provided in the response.     
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/JobSummary'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/_run:
    parameters:
    - name: job_id
      in: path
      required: !!bool true
      type: string
      description: The `job_id` of interest.
    post:
      summary: Activate processing
      description: Signal that record upload is finished and that the processing phase of the job can start. Monitor status of the job via the `/jobs/{job_id}/status` endpoint. 
      responses:
        '202':
          description: The request for execution has been accepted. The job will be picked up and processed.
        '410':
          description: The records for this job have been deleted.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'


  /jobs/{job_id}/records:
    parameters:
    - name: job_id
      in: path
      required: !!bool true
      type: string
      description: The `job_id` of interest.
    post:
      summary: Upload records to the job.
      description: Adds the given record to the job. The records must conform the the schema defined during job creation. Records may be uploaded in parallel. Call `GET` on `/records/pages` to retrieve the collection of valid record pages. Initiate processing via `_run` when record upload is finished.
      parameters:
      - name: record block
        in: body
        schema:
          $ref: '#/definitions/Records'
      responses:
        '200':
          description: The records have been received for processing
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/records/pages:
    parameters:
    - name: job_id
      in: path
      required: !!bool true
      type: string
      description: The `job_id` of interest.
    get:
      summary: Retrieve input or output record page ids.
      description: Gets the set of record pages that make up either the input or output record set.
      parameters:
      - name: kind
        description: |
          Specifies the kind of records pages you want (input or output).
        in: query
        required: !!bool true
        type: string
        enum:
        - input
        - output
      responses:
        '200':
          description: The record pages have been returned.
          schema:
            $ref: '#/definitions/RecordPages'
        '410':
          description: The records for this job have been deleted.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/records/{page_id}:
    parameters:
    - name: job_id
      in: path
      required: !!bool true
      type: string
      description: The `job_id` of interest.
    - name: page_id
      in: path
      required: !!bool true
      type: string
      description: A `page_id`, as returned from a `GET` on the `records/pages` endpoint.
    get:
      summary: Retrieve a single record page.
      description: |
        Gets the identified record page. The set of valid page IDs is returned from a `GET .../records/pages` endpoint. Since the page IDs are constant, they can be retrieved in any fashion that suits the caller (in parallel, multiple times).
      responses:
        '200':
          description: The record page has been return
          schema:
            $ref: '#/definitions/Records'
        '410':
          description: The records for this job have been deleted.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/reports:
    parameters:
    - name: job_id
      in: path
      required: true
      type: string
      description: The `job_id` of interest.
    get:
      summary: Retrieve avaialble reportts.
      description: Gets the set of available reports ids. Retrieve the content of a report via the `/reports/{report_id}` endpoint.
      responses:
        '200':
          description: A collection of report ids for this job.
          schema:
            $ref: '#/definitions/Reports'
        '410':
          description: The reports for this job have been deleted.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

  /jobs/{job_id}/reports/{report_id}:
    parameters:
    - name: job_id
      in: path
      required: true
      type: string
      description: The `job_id` of interest.
    - name: report_id
      in: path
      required: true
      type: string
      description: A `report_id`, as returned from the `{job_id}/reports` endpoint.
    get:
      summary: Retrieve a report.
      description: |
        Gets the identified report. The set of valid report Ids are returned from the `{job_id}/reports` endpoint.
      produces:
        - application/pdf
      responses:
        200:
          description: The content of the report.
          schema:
            type: file        
        '410':
          description: The reports for this job have been deleted.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: See additional details for the exact problem.
          schema:
            $ref: '#/definitions/Error'

definitions:
  WalkSequenceJobCreationRequest:
    type: object
    properties:
      parent_job:
        description: |
          The Job ID of the parent job.
        type: string
      
      configuration:
        $ref: '#/definitions/WalkSequenceConfiguration'
      input_fields:
        type: array
        items: 
          $ref: '#/definitions/walkSequenceInputField'
      output_fields:
        type: array
        items:
          $ref: '#/definitions/walkSequenceOutputField'
  WalkSequenceJob:
    type: object
    description: Defines the layout of records that will be uploaded/downloaded in this job.
    allOf:
    - $ref: '#/definitions/JobSummary'
    - $ref: '#/definitions/WalkSequenceJobCreationRequest'
    
  WalkSequenceConfiguration:
    type: object
    properties:
      address_element_format:
        $ref: '#/definitions/addressElementFormat'
      address_casing:
        $ref: '#/definitions/casing'
      address_line_formatting:
          $ref: '#/definitions/addressLineFormatting'
      apply_casing_to_business:
          type: boolean
      firm_placement:
          $ref: '#/definitions/firmPlacement'
      keep_extra_information:
          type: boolean
      list_processor_name:
          type: string
      mailers_address:
          type: string
      mailers_city:
          type: string
      mailers_list_name:
          type: string
      mailers_name:
          type: string
      mailers_state:
          type: string
      mailers_zipcode:
          type: string
      pmb_placement:
          $ref: '#/definitions/pmbPlacement'
      prefer_abbreviated_addresses:
          type: boolean
      preferred_address_type:
          $ref: '#/definitions/preferredAddressType'
      require_dpv_validated_secondary:
          type: boolean
      unit_placement:
          $ref: '#/definitions/unitPlacement'
    

  JobSummary:
    type: object
    properties:
      job_id:
        type: string
      job_status:
        $ref: '#/definitions/jobStatus'

  JobSummaryCollection:
    type: object
    properties:
      jobs:
        type: array
        items:
          $ref: '#/definitions/JobSummary'


  RecordPages:
    type: object
    properties:
      page_ids:
        description: A collection of page IDs that can be retrieved
        type: array
        items:
          type: string
        
  Records:
    type: object
    properties:
      records:
        description: A two-dimensional array containing records to be uploaded
        type: array
        items:
          type: array
          items:
            type: string

    example: { "records":[
      ["0", "No change", null, {}, "1301 5th Ave", "Ste. 1300", "Seattle", "WA", "98101", false, true, false],
      ["1", "New address", "2017-09-14", {"A2": "Family match"}, "1302 4th Lane", "", "Poulsbo", "WA", "98167", false, false, false]]
    }

  ReportDescriptor:
    type: object
    properties:
      id:
        description: An id for retrieving the report.
        type: string
      name:
        description: The name of the report
        type: string

  Reports:
    type: object
    properties:
      reports:
        description: An array of report descriptors
        type: array
        items:
          $ref: '#/definitions/ReportDescriptor'
          

  jobStatus:
    type: string  
    enum:
      - CREATED
      - READY_TO_RUN
      - RUNNING
      - SUCCESS
      - FAILURE
      - DELETED
  
  casing:
    type: string
    enum: 
      - mixed_case
      - upper_case

  addressElementFormat:
    type: string
    enum: 
      - standard
      - standard_with_punctuation
      - full_words

  addressLineFormatting:
    type: string
    enum:
    - standard
    - top_justified


  firmPlacement:
    type: string
    enum: 
      - as_input
      - move_to_business_if_empty
      - move_to_business_always

  pmbPlacement:
    type: string
    enum: 
      - with_units
      - as_input

  unitPlacement:
    type: string
    enum: 
      - on_delivery_line
      - above_delivery_line_if_empty
      - above_delivery_line_always

  preferredAddressType:
    type: string
    enum: 
      - first_available
      - street
      - pobox


  walkSequenceInputField:
    type: string
    enum:
      - id
      - address_block
      - organization
      - urbanization
      - address_line_1
      - address_line_2
      - city_state_zip
      - city
      - state
      - zip_code
      - custom_1
      - custom_2
      - custom_3
      - custom_4
      - custom_5
      - custom_6
      - custom_7
      - custom_8
      - custom_9
      - custom_10

  walkSequenceOutputField:
    type: string
    enum: 
      - id
      - abbreviated_city
      - address_block
      - address_line_1
      - address_line_2
      - address_type
      - organization
      - carrier_route
      - city
      - congressional_district
      - country
      - county
      - county_code
      - delivery_point
      - dpv_coded
      - dpv_footnote
      - dpv_indicator
      - delivery_type
      - drop_type
      - drop_count
      - elot
      - extra_address_information
      - fips_code
      - is_business
      - is_cmra
      - is_ews_match
      - is_no_stat
      - is_pbsa
      - is_vacant
      - is_residence
      - is_educational_institute
      - is_seasonally_occupied
      - is_throwback
      - lacs_coded
      - lacs_link_footnote
      - lacs_link_indicator
      - city_state_zip
      - matched_to_default
      - post_directional
      - pre_directional
      - primary_address_line
      - primary_number
      - private_mailbox
      - secondary_address_line
      - state
      - street_name
      - street_suffix
      - suite_link_footnote
      - unit_designator
      - unit_number
      - urbanization
      - uscorrection_description
      - uscorrection_footnote
      - outcome_codes
      - walk_sequence_number
      - zip_code    
      - custom_1
      - custom_2
      - custom_3
      - custom_4
      - custom_5
      - custom_6
      - custom_7
      - custom_8
      - custom_9
      - custom_10




  Error:
    type: object
    description: Describes an error object.
    required:
      - code
      - message
    properties:
      code:
        type: integer
        description: The HTTP status code.
      message:
        type: string
        description: A human-readable error message.
      additional_details:
        type: object
        description: Additional details about the error.
